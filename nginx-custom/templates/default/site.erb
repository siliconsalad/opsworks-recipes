upstream unicorn_<%= @domain %> {
 server unix:/srv/www/<%= @app_name %>/shared/sockets/unicorn.sock fail_timeout=0;
}

server {
  listen 80;
  server_name <%= @domain %> <%= @app_name %>;

  access_log /var/log/nginx/<%= @domain %>.access.log;

  keepalive_timeout 5;

  root /srv/www/<%= @app_name %>/current/public/;

  if ($http_host !~* "<%= @domain %>") {
    rewrite ^(.*)$ http://<%= @domain %>$1 permanent;
  }

  client_max_body_size 10M;

  set_real_ip_from 10.0.0.0/8;
  real_ip_header   X-Forwarded-For;

  satisfy any;
  allow <%= @authorized_ip %>;
  deny all;
  auth_basic "Restricted Access for <%= @app_name %> staging";
  auth_basic_user_file /etc/nginx/conf.d/htpasswd;

  location / {
    try_files $uri/index.html $uri/index.htm @unicorn;
  }

  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    proxy_read_timeout 60;
    proxy_send_timeout 60;

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @domain %>;
      break;
    }
  }

  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  error_page 503 @maintenance;
  location @maintenance {
    rewrite  ^(.*)$  /maintenance.html last;
    break;
  }

  error_page 500 502 504 /500.html;
  location = /500.html {
    root /srv/www/<%= @app_name %>/current/public/;
  }
}
