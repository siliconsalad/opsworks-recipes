global
  log 127.0.0.1   local0
  log 127.0.0.1   local1 notice
  # log loghost    local0 info
  maxconn 80000
  # debug
  # quiet
  user haproxy
  group haproxy
  stats socket /tmp/haproxy.sock

defaults
  log             global
  mode            http
  option          httplog
  option          dontlognull
  retries         3
  option          redispatch
  maxconn        80000
  timeout client 60s             # Client and server timeout must match the longest
  timeout server 60s             # time we may wait for a response from the server.
  timeout queue  120s            # Don't queue requests too long if saturated.
  timeout connect 10s            # There's no reason to change this one.
  timeout http-request 30s       # A complete request may never take that long.
  option          httpclose      # disable keepalive (HAProxy does not yet support the HTTP keep-alive mode)
  option          abortonclose   # enable early dropping of aborted requests from pending queue
  option          httpchk        # enable HTTP protocol to check on servers health
  stats auth opsworks:mqr9rl9ahi
  stats uri /haproxy?stats

userlist UsersFor_AcmeCorp
  user <%= node[:haproxy][:http_user_name] %> insecure-password <%= node[:haproxy][:http_password] %>

# Set up application listeners here.

backend s3_souscription
  reqrep ^GET\ /Souscription/\ HTTP/1.1 GET\ /subscription/souscription.html\ HTTP/1.1
  server s3_souscription1 <%= node[:haproxy][:s3_bucket] %>
backend s3_assets
  reqrep ^([^\ :]*)\ /Souscription/assets/(.*)     \1\ /subscription/assets/\2
  server s3_assets1 <%= node[:haproxy][:s3_bucket] %>
backend s3_favicon
  reqrep ^([^\ :]*)\ /Souscription/favicon(.*)     \1\ /subscription/favicon\2
  server s3_favicon1 <%= node[:haproxy][:s3_bucket] %>
backend planete_oui
  # acl AuthOkay http_auth(UsersFor_AcmeCorp)
  # http-request auth realm SiliconSalad if !AuthOkay

  reqirep ^Host: Host:\ <%= node[:haproxy][:forwarded_host] %>
  server planete_oui1 <%= node[:haproxy][:target_host] %>:443 weight 1 maxconn 100 check ssl verify none
backend s3_robots_txt
  reqrep ^GET\ /robots.txt\ HTTP/1.1 GET\ /subscription/robots.txt\ HTTP/1.1
  server s3_robots_txt <%= node[:haproxy][:s3_bucket] %>
backend s3_static
  reqrep ^([^\ :]*)\ /lp/(.*)     \1\ /static/\2
  server s3_static1 <%= node[:haproxy][:s3_bucket] %>
backend s3_homepage
  reqrep ^GET\ /\ HTTP/1.1 GET\ /static/index.html\ HTTP/1.1
  server s3_homepage1 <%= node[:haproxy][:s3_bucket] %>
backend s3_homepage_assets
  reqrep ^([^\ :]*)\ /assets/(.*)     \1\ /static/assets/\2
  server s3_homepage_assets1 <%= node[:haproxy][:s3_bucket] %>
backend s3_homepage_with_params
  reqrep ^GET\ /?(.*)\ HTTP/1.1 GET\ /static/index.html\ HTTP/1.1
  server s3_homepage_params1 <%= node[:haproxy][:s3_bucket] %>

frontend http-in
  bind :80

  acl is_proxy_https hdr(X-Forwarded-Proto) https
  redirect scheme https code 301 if ! is_proxy_https

  use_backend s3_assets if { path_beg /Souscription/assets }
  use_backend s3_favicon if { path_beg /Souscription/favicon }
  use_backend s3_souscription if { path_beg /Souscription/ }
  use_backend s3_robots_txt if { path_beg /robots.txt }
  # use_backend s3_homepage_with_params if { url_reg /\?(.*) }
  use_backend s3_static if { path_beg /lp/ }
  # use_backend s3_homepage if { path_reg ^$|^/$ }
  # use_backend s3_homepage_assets if { path_beg /assets/ }

  default_backend planete_oui
